import ['EVENTS', 'GITHUB_URL'], '../constants'
import 'Events', '../events'
import 'Net', '../core/net'

export default class ElmArticles < HTMLElement
  def initialize
    super
    @h_elm_greet_loaded = lambda do
      get_data() do |data|
        Events.send(EVENTS[:elm_articles_length], data.length)
        init_elm(data)
      end
    end

    init_spinner()
  end

  def get_data(&block)
    Net.http_get(GITHUB_URL[:gists]) do |gists|
      gists_filter = lambda do
        result = []
        gists.forEach do |gist|
          description_split = gist.description.split('. ')
          name = description_split[0]
          description = description_split.slice(1, description_split.length).join('. ')

          if name && description
            result << {
              id: gist.id,
              name: name,
              description: description,
              url: gist.html_url,
              created_at: gist.created_at
            }
          end
        end
        result
      end
      
      block(gists_filter()) if block
    end
  end

  def connectedCallback()
    document.addEventListener(EVENTS[:elm_greet_loaded], @h_elm_greet_loaded)
  end

  def disconnectedCallback()
    document.removeEventListener(EVENTS[:elm_greet_loaded], @h_elm_greet_loaded)
  end

  def init_elm(data)
    l_acc_item = lambda do
      result = ""

      if data.length == 0 or data[0].id == -1
        result = """
        <div class='text-center'>
          <p class='h4 text-muted'>no articles found</p>
        </div>
        """
        return result
      end

      (0...data.length).step(1) do |i| article = data[i]
        article_id = "#{article[:id]}-#{article[:name].url_form()}"

        template = """
          <div id='#{article_id}' class='accordion-item'>
            <h2 class='accordion-header' id='heading_#{article_id}'>
              <button id='button_#{article_id}' class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#collapse_#{article_id}' aria-expanded='false' aria-controls='collapse_#{article_id}'>
                <p class='h5 mb-0'>#{article[:name]}</p>
              </button>
            </h2>
            <div id='collapse_#{article_id}' class='accordion-collapse collapse' aria-labelledby='heading_#{article_id}' data-bs-parent='#accordionArticles'>
              <div class='accordion-body'>
                
                <div class='mb-3'>
                  <div class='row g-0'>
                    <div class='container'>
                      <div class='card-body'>
                        <p class='card-text'>#{article[:description]}</p>
                        <div class='row g-0'>
                          <div class='col-6' style='margin-top: auto; margin-bottom: auto;'>
                            <p class='card-text'><small class='text-muted'>Created by #{ article[:created_at].to_date() }</small></p>
                          </div>

                          <div class='col-6 text-center'>
                              <a href='#{article[:url]}' target='_blank' class='btn btn-primary card-text'>Read...</a>
                          </div>

                        </div>
                      </div>
                    </div>
                  </div>
                </div>

              </div>
            </div>
          </div>
        """
        result += "#{template}\n"
      end

      return result
    end

    template = """
      <div class='accordion mx-auto col-lg-9' id='accordionArticles'>
        #{l_acc_item.call()}
      </div>
    """

    self.innerHTML = template
  end

  def init_spinner()
    self.innerHTML = "<elm-spinner></elm-spinner>"
  end
end